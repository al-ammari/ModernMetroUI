<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imglstDoc.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imglstDoc.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAg
        CQAAAk1TRnQBSQFMAwEBAAEYAQABGAEAARIBAAESAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABSAMA
        ARIDAAEBAQABIAUAAUABFBIAAd4B6wHvAf8B3gHrAe8B/wHeAesB7wH/Ad4B6wHvAf8B3gHrAe8B/wHe
        AesB7wH/Ad4B6wHvAf8B3gHrAe8B/wHeAesB7wH/AdUB6QHvAf8BHgHFAe8B/wEXAcQB7wH/ARcBxAHv
        Af8BGgHFAe8B/wEYAcQB7wH/ARcBxAHvAf8BFwHEAe8B/wE8AZMBpwHj2AAB3gHrAe8B/wHeAesB7wH/
        Ad4B6wHvAf8B3gHrAe8B/wHeAesB7wH/Ad4B6wHvAf8B3gHrAe8B/wHeAesB7wH/Ad4B6wHvAf8B3gHr
        Ae8B/wFzAdYB7wH/ARcBxAHvAf8BFwHEAe8B/wE7Ac0B8QH/ATIBywHxAf8BFwHEAe8B/wEXAcQB7wH/
        ATwCPgFo2AAB3gHrAe8B/wHeAesB7wH/Ad4B6wHvAf8B3gHrAe8B/wHeAesB7wH/Ad4B6wHvAf8B3gHr
        Ae8B/wHeAesB7wH/Ad4B6wHvAf8B3gHrAe8B/wHUAekB7wH/ASsByAHvAf8BFwHEAe8B/wFTAdMB8wH/
        AUYB0AHyAf8BFwHEAe8B/wFJAXwBiQHQAwIBA9gAAd4B6wHvAf8B3gHrAe8B/wHbAekB7QH/AckB2wHg
        Af8ByQHbAeAB/wHJAdsB4AH/AckB2wHgAf8ByQHbAeAB/wHJAdsB4AH/AckB2wHgAf8BygHbAeAB/wGU
        AdsB7QH/ARcBxAHvAf8BZgHYAfUB/wFWAdQB8wH/ARoBvwHqAf4DKQE+3AAB3gHrAe8B/wHeAesB7wH/
        Ad4B6wHvAf8B3QHqAe4B/wHdAeoB7gH/Ad0B6gHuAf8B3QHqAe4B/wHdAeoB7gH/Ad0B6gHuAf8B3QHq
        Ae4B/wHdAeoB7gH/Ad0B6wHvAf8BQwHNAe8B/wFmAdgB9QH/AVYB1AHzAf8BTgFdAWABqOAAAd4B6wHv
        Af8B3gHrAe8B/wHeAesB7wH/AdoB6AHsAf8B2gHoAewB/wHaAegB7AH/AdoB6AHsAf8B2gHoAewB/wHa
        AegB7AH/AdoB6AHsAf8B2gHoAewB/wHeAesB7wH/AbYB4wHvAf8BKQHJAfAB/wEvAbEBzwH1AxYBHuAA
        Ad4B6wHvAf8B3gHrAe8B/wHbAekB7QH/AcwB3QHiAf8BzAHdAeIB/wHMAd0B4gH/AcwB3QHiAf8BzAHd
        AeIB/wHMAd0B4gH/AcwB3QHiAf8BzAHdAeIB/wHcAekB7QH/Ad4B6wHvAf8BYwHTAe8B/wFFAUcBSAF9
        5AAB3gHrAe8B/wHeAesB7wH/Ad4B6wHvAf8B3gHrAe8B/wHeAesB7wH/Ad4B6wHvAf8B3gHrAe8B/wHe
        AesB7wH/Ad4B6wHvAf8B3gHrAe8B/wHeAesB7wH/Ad4B6wHvAf8B3gHrAe8B/wHFAdMB1gH3AwEBAuQA
        Ad4B6wHvAf8B3gHrAe8B/wHbAekB7QH/AcgB2gHfAf8ByAHaAd8B/wHIAdoB3wH/AcgB2gHfAf8ByAHa
        Ad8B/wHIAdoB3wH/AcgB2gHfAf8ByAHaAd8B/wHcAekB7QH/Ad4B6wHvAf8BxAHNAdIB9ugAAd4B6wHv
        Af8B3gHrAe8B/wHeAesB7wH/Ad4B6wHvAf8B3gHrAe8B/wHeAesB7wH/Ad4B6wHvAf8B3gHrAe8B/wHe
        AesB7wH/Ad4B6wHvAf8B3gHrAe8B/wHeAesB7wH/Ad4B6wHvAf8BxAHNAdIB9ugAAd4B6wHvAf8B3gHr
        Ae8B/wHeAesB7wH/AdkB5wHrAf8B2QHnAesB/wHZAecB6wH/AdkB5wHrAf8B2QHnAesB/wHZAecB6wH/
        AdkB5wHrAf8B2QHnAesB/wHeAesB7wH/Ad4B6wHvAf8BxAHNAdIB9ugAAd4B6wHvAf8B3gHrAe8B/wHb
        AekB7QH/Ac0B3gHiAf8BzQHeAeIB/wHNAd4B4gH/Ac0B3gHiAf8BzQHeAeIB/wHNAd4B4gH/Ac0B3gHi
        Af8BzQHeAeIB/wHcAekB7gH/Ad4B6wHvAf8BxAHNAdIB9ugAAd4B6wHvAf8B3gHrAe8B/wHeAesB7wH/
        Ad4B6wHvAf8B3gHrAe8B/wHeAesB7wH/Ad4B6wHvAf8B3gHrAe8B/wHeAesB7wH/Ad4B6wHvAf8B3gHr
        Ae8B/wHeAesB7wH/Ad4B6wHvAf8BxAHNAdIB9ugAAd4B6wHvAf8B3gHrAe8B/wHbAekB7QH/AcgB2gHf
        Af8ByAHaAd8B/wHIAdoB3wH/AdQB4wHoAf8B3gHrAe8B/wHeAesB7wH/AdoB6AHsAf8B0gHiAeYB/wHS
        AeIB5gH/AdIB4gHmAf8BogGqAasB6OgAAd4B6wHvAf8B3gHrAe8B/wHeAesB7wH/Ad4B6wHvAf8B3gHr
        Ae8B/wHeAesB7wH/Ad4B6wHvAf8B3gHrAe8B/wHeAesB7wH/AdEB4QHlAf8BuwHQAdUB/wG7AdAB1QH/
        AZsBpwGsAe0DIgEy6AAB3gHrAe8B/wHeAesB7wH/Ad4B6wHvAf8B3gHrAe8B/wHeAesB7wH/Ad4B6wHv
        Af8B3gHrAe8B/wHeAesB7wH/Ad4B6wHvAf8B0QHhAeUB/wG7AdAB1QH/AZsBpwGsAe0DIgEy7AAB3gHr
        Ae8B/wHeAesB7wH/Ad4B6wHvAf8B3gHrAe8B/wHeAesB7wH/Ad4B6wHvAf8B3gHrAe8B/wHeAesB7wH/
        Ad4B6wHvAf8B0QHhAeUB/wGbAacBrAHtAyIBMvAAAd4B6wHvAf8B3gHrAe8B/wHeAesB7wH/Ad4B6wHv
        Af8B3gHrAe8B/wHeAesB7wH/Ad4B6wHvAf8B3gHrAe8B/wHeAesB7wH/AakBtAG2Ae0DIgEy9AABQgFN
        AT4HAAE+AwABKAMAAUgDAAESAwABAQEAAQEFAAHYFwAD/ycAAUALAAHACwABwAoAAQEBwAoAAQEBwAoA
        AQMBwAoAAQMBwAoAAQMBwAoAAQMBwAoAAQMBwAoAAQMBwAoAAQMBwAoAAQcBwAoAAQ8BwAoAAR8BwAkA
        Cw==
</value>
  </data>
</root>